name: seeme_app
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.15.0 <3.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  google_fonts: ^2.3.1 # Pour implémenter les styles pour le text
  provider: ^6.0.2 # Pour la gestion des états dans l'application
  shared_preferences: ^2.0.15 # Pour implémenter de simple sauvergardes comme les états de l'app
  smooth_page_indicator: ^1.0.0+2 # Pour implémenter l'onboarding apres l'authentification
  go_router: ^3.1.1 # Pour implémenter la navigation dans l'application
  cached_network_image: ^3.2.0 # Permet de télécharger et mettre en cache les images qui seront utilisées dans l'app
  flutter_slidable: ^1.3.0 # Permet de créer un widget qui permet à l'utilisateur de faire glisser une carte vers la gauche et vers la droite pour effectuer différentes actions, comme la suppression d'un élément enregistrée.
  flutter_svg: ^1.0.3 # Permet de chargez des images SVG sans avoir besoin d'utiliser un programme pour les convertir en fichiers vectoriels
  json_annotation: ^4.5.0 # Classes et fonctions d'assistance prenant en charge la génération de code JSON via le package `json_serializable`.
  animations: ^2.0.2 # Ce package contient des animations prédéfinies pour les effets couramment souhaités
  chopper: ^4.0.6 # Permet de générer un client http
  logging: ^1.0.2 # Fournit des API pour le débogage et la journalisation des erreurs
  
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  
  
  
dev_dependencies:
  flutter_test:
    sdk: flutter
  build_runner: ^2.1.11 # Fournit un moyen concret de générer des fichiers en utilisant le code Dart
  json_serializable: ^6.2.0 # Permet de générer automatiquement du code pour la conversion vers et depuis JSON en annotant les classes Dart.
  chopper_generator: ^4.0.6 # Ce package fournit le générateur de code pour le package Chopper

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^1.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/icons/
  

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
